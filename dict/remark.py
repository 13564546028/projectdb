"""
    第三方库
"""

#   pip的使用:
#   作用:  管理python的标准第三方库

#   安装:  sudo apt-get install python3-pip

#   常用命令:
#       安装软件包: pip3 install [package]   如果是pip2就自动使用python2安装
#           安装位置: 查找安装目录: pip3 show greenlet   /usr/local/lib/python3.5/dist-packages

#       查看python系统包: pip3 list

#       在软件包中搜索: pip3 search [name]

#       查看软件信息:  pip3 show [package]

#       升级软件包:  pip3 install --upgrade [package]

#       卸载软件包:　pip3 uninstall [package]

#       导出软件包环境:  pip3 freeze > requirements.txt
#       使用文档自动安装python环境:  pip3 install -r requirements.txt

"""
    软件项目
"""

#   具有一定完整功能的工程;可能包含软件,甚至结合硬件

#   应用层开发：
#       前端: 客户端,前台;  和用户直接交互
#           要求: 良好的用户体验, 全面方便的功能使用,效率和优化

#       后端: 服务端,后台;  请求处理 ,逻辑和数据处理
#           要求: 更高的并发效率,更快的处理速度,更强的安全性

#   项目开发流程：
#       [1] 需求分析:  确定用户真实需求
#           确定用户真是需求和项目基本功能
#           确定项目的可行性和难度
#           完成需求分析文档,进行确认

#       [2] 概要设计: 对项目进行整体设计,确定技术架构
#           确定项目原型和整体架构
#           功能模块分析 确定技术方向和思路
#           完成项目规划和分工
#           形成概要设计文档,指导开发
#
#       [3] 详细设计和编码: 代码设计和编写
#           项目模块具体设计
#           编码测试
#           完成详细设计文档

#       [4] 项目测试:  对项目功能进行测试
#           项目的功能测试
#           对项目进行修改完善
#           完成测试报告

#       [5] 项目发布
#           项目提交发布
#           完成项目说明文档

#       [6] 后期的维护升级
#           bug 修改
#           产品的升级迭代

#   注意事项:
#       [1] 文档编写的重要性
#       [2] 项目计划的重要性
#       [3] 项目中的冲突解决


#   项目工具:
#       文档编写:　word markdown ppt
#       流程图:   visio   mindmanager   x-mind
#       项目管理工具:　project
#       代码管理:  git ,  svn


"""
    项目练习
"""
# 网络电子词典:
#   功能: [1] 用户可以登录和注册
#           登录凭借用户名,密码
#           注册要求用户必须填写用户名密码,其他内容自己定
#           用户名不能重复
#           用户注册信息需要长期保存

#       [2]  可以通过print打印基本的命令提示;在客户端输入
#           程序分为客户端和服务端,
#           可以多个客户端同时在线
#           客户端负责请求发送和结果呈现,服务端负责逻辑数据处理

#       [3]  客户端启动后即进入一级界面,功能选项: 登录 注册 退出
#           选择登录输入用户名密码,登录成功进入耳机界面
#           选择注册输入相应信息,注册成功可以返回一级界面,也可以直接进入二级界面
#           退出即退出客户端

#       [4] 二级界面功能如下,查单词,查看历史记录,注销登录
#           选择查单词即可以循环输入单词,得到单词的解释,输入## 表示结束单词查询
#           选择历史记录,即可得到当前用户最近10条单词查询记录,得到内容包括: 姓名,单词,时间
#           选择注销即返回一级界面

#   单词表
#       每个单词占一行
#       单词按照从小到大排列
#       单词和解释之间一定有空格


#   操作步骤
#       确定并发方案,使用的套接字,细节确定,使用数据库查询还是文本查询
#       创建数据库
#       结构的设计: 选择封装方法,客户端和服务端的工作流程,具体几个功能模块
#       完成通信的搭建


#   具体功能:
#       注册:
#           客户端: 输入注册信息
#                   将信息发送给服务端

#        登录
#       查询
#       历史记录


#       import getpass
#       passwd = getpass.getpass()  参数默认passwd:
#       功能: 隐藏终端输入



#


























